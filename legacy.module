<?php
/* *
 * @file
 * The legacy module file, does file_transfer of legacy files
 * when a menu_get_item in hook_init fails
 */

/**
 * Implements hook_menu().
 */
function legacy_menu() {
  $items = array();

  $items['admin/config/legacy'] = array(
    'title' => 'Legacy settings',
    'description' => 'Configure legacy files location',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('legacy_settings'),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implements hook_stream_wrappers().
 */
function legacy_stream_wrappers() {
	return array(
		'legacy' => array(
			'name' => t('Default distribution files'),
			'class' => 'LegacyStreamWrapper',
			'description' => t('Provides read-only paths to legacy files.'),
			'type' => STREAM_WRAPPERS_READ_VISIBLE,
		),
	);
}

/**
 * Legacy files (legacy://) stream wrapper class.
 */
class LegacyStreamWrapper extends DrupalPublicStreamWrapper {
	public function getDirectoryPath() {
		return variable_get('legacy_root', 'sites/default/legacy');
	}
}

function legacy_init() {
	// we need to check if drupal page exists
	// or not - menu_get_item seems to do that well
	if (menu_get_item()) {
		// deslash drupal pages
		if (substr($_SERVER['REQUEST_URI'], -1) === '/') { 
			$url = rtrim($_GET['q'], '/');
			drupal_goto($url);
		}
	} else {
		// reslash legacy pages
		$path = 'legacy://' . check_url($_GET['q']);
		if (is_dir($path)) {
			// check for trailing slash & force it
			if (substr($_SERVER['REQUEST_URI'], -1) !== '/') { drupal_goto($_GET['q'] . '/'); } 
			$path .= '/index.html'; 
		}
		$content_type = file_get_mimetype($path); //'application/octet-stream'
		if (!file_exists($path)) {
			return false;
		}
		$headers = array(
				'Content-Type' => $content_type,
				//http://local.drupal/'Content-Disposition' => 'attachment; filename="'.basename($path).'"',
				'Content-Length' => filesize($path),
		);
		if (preg_match('/\.php$/', $path)) {
			try {
				$olddir = getcwd();
				$dir = preg_replace('/legacy:\/\//', '', $path);
				$dir = variable_get('legacy_root', 'sites/default/legacy') . '/' .$dir;
				$dir = dirname($dir);
				chdir($dir);
				// buffer PHP output
				ob_start();
				// this "invokes" the legacy page and gathers its content
				include $path;
				// pull in the buffered content
				$output = ob_get_contents();
				// stop output buffering
				ob_end_clean();
				echo $output;
				drupal_exit();
				return;
			} catch (Exception $e) {
				// All other errors propagate up
				throw $e;
			}	
		} else {
			return file_transfer($path, $headers);
		}
	}
}


/**
 * Legacy administration settings.
 */
function legacy_settings() {
  $form['legacy_root'] = array(
    '#type' => 'textfield',
    '#title' => t('Legacy files root path'),
    '#description' => t('page not found handler will look into this dir - both absolute/relative path accepted'),
    '#default_value' => variable_get('legacy_root', 'sites/default/legacy'),
  );

  return system_settings_form($form);
}

